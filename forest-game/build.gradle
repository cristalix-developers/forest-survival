buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "org.hidetake:gradle-ssh-plugin:2.10.1"
  }
}

plugins {
    id 'dev.implario.mcgradle' version '1.0.4'
}

apply plugin: 'org.hidetake.ssh'
apply plugin: 'org.jetbrains.kotlin.jvm'

bukkitPlugin {
    main = 'me.func.forest.Forest'
    depend << 'CoreAPI'
}

group = 'me.func'
version = '1.0-SNAPSHOT'

afterEvaluate {
    jar {
        archiveBaseName.set 'forest'
        from configurations.runtimeClasspath.collect { it.directory ? it : zipTree(it) }
        duplicatesStrategy DuplicatesStrategy.EXCLUDE
    }
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

dependencies {
    compileOnly group: 'org.codehaus.groovy', name: 'groovy', version: '3.0.7'

    compileOnly 'cristalix:bukkit-core:21.01.30'
    compileOnly 'cristalix:dark-paper:21.02.03'

    compileOnly 'dev.xdark:feder:1.0-SNAPSHOT'

    implementation 'clepto:clepto-bukkit:3.4.2'
    implementation 'clepto:clepto-cristalix:3.0.2'
    implementation 'ru.cristalix:stat-service-bukkit-api:21.02.28.1821'
}

remotes {
    webServer {
        host = project.properties["DEPLOY_HOST"]
        user = project.properties["DEPLOY_USER"]
        identity = file(project.properties["DEPLOY_KEY_ROOT"])
        passphrase = project.properties["DEPLOY_PASSPHRASE"]
    }
}

ssh.settings {
     knownHosts = allowAnyHosts
}

task upload() {
    doLast {
        ssh.run {
            session(remotes.webServer) {
                put from: jar.getArchiveFile().get().getAsFile(), into: "/home/func/forest/resources-bin/test"
                execute 'netstat -tulpn | grep :10111 | grep --perl-regexp -o \"\\d+(?=/java)\" | xargs kill -TERM'
            }
        }
    }
}

afterEvaluate {
    tasks.upload.dependsOn(tasks.jar)
}